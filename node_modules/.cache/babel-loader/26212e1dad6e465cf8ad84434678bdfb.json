{"ast":null,"code":"var _jsxFileName = \"/home/atat-dev/Desktop/VS_CODE/NodeJS/FE/chat_socket_id/src/pages/Chatapp.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Layout, Menu } from 'antd';\nimport { MenuUnfoldOutlined, MenuFoldOutlined, UserOutlined, VideoCameraOutlined, UploadOutlined } from '@ant-design/icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Header,\n  Sider,\n  Content\n} = Layout;\nexport const Chatapp = () => {\n  _s();\n\n  const [collapsed, setCollapsed] = useState(false);\n\n  const toggle = () => {\n    setCollapsed(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"app\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 8\n  }, this);\n};\n\n_s(Chatapp, \"IaHwFfvbaw8y79e5do0CzWS1eXc=\");\n\n_c = Chatapp;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chatapp\");","map":{"version":3,"sources":["/home/atat-dev/Desktop/VS_CODE/NodeJS/FE/chat_socket_id/src/pages/Chatapp.jsx"],"names":["React","useState","Layout","Menu","MenuUnfoldOutlined","MenuFoldOutlined","UserOutlined","VideoCameraOutlined","UploadOutlined","Header","Sider","Content","Chatapp","collapsed","setCollapsed","toggle"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,MAA7B;AACA,SACIC,kBADJ,EAEIC,gBAFJ,EAGIC,YAHJ,EAIIC,mBAJJ,EAKIC,cALJ,QAMO,mBANP;;AAQA,MAAM;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,KAAV;AAAiBC,EAAAA;AAAjB,IAA6BT,MAAnC;AAEA,OAAO,MAAMU,OAAO,GAAG,MAAM;AAAA;;AAEzB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC,KAAD,CAA1C;;AAEA,QAAMc,MAAM,GAAG,MAAM;AACjBD,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACH,GAFD;;AAGA,sBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADH;AAGH,CAVM;;GAAMF,O;;KAAAA,O","sourcesContent":["import React, { useState } from 'react'\nimport { Layout, Menu } from 'antd';\nimport {\n    MenuUnfoldOutlined,\n    MenuFoldOutlined,\n    UserOutlined,\n    VideoCameraOutlined,\n    UploadOutlined,\n} from '@ant-design/icons';\n\nconst { Header, Sider, Content } = Layout;\n\nexport const Chatapp = () => {\n\n    const [collapsed, setCollapsed] = useState(false)\n\n    const toggle = () => {\n        setCollapsed(true);\n    };\n    return (\n       <h1>app</h1>\n    )\n}\n\n"]},"metadata":{},"sourceType":"module"}