{"ast":null,"code":"var _jsxFileName = \"/home/atat-dev/Desktop/VS_CODE/NodeJS/FE/chat_socket_id/src/pages/MainRomChat.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Form, Input, Button } from 'antd';\nimport { UserOutlined, HomeTwoTone } from '@ant-design/icons';\nimport './scss/mainRoomChat.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const MainRomChat = () => {\n  _s();\n\n  const [form] = Form.useForm();\n  const [, forceUpdate] = useState({}); // To disable submit button at the beginning.\n\n  useEffect(() => {\n    forceUpdate({});\n  }, []);\n\n  const onFinish = values => {\n    console.log('Finish:', values);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mainRoom\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"roomChat\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Room Chat L\\u1EA9u Xanh\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        form: form,\n        name: \"horizontal_login\",\n        layout: \"inline\",\n        onFinish: onFinish,\n        children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"roomChat\",\n          rules: [{\n            required: true,\n            message: 'Please input your username!'\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            prefix: /*#__PURE__*/_jsxDEV(HomeTwoTone, {\n              className: \"site-form-item-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 40\n            }, this),\n            placeholder: \"Room Chat\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"userName\",\n          rules: [{\n            required: true,\n            message: 'Please input your username!'\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            prefix: /*#__PURE__*/_jsxDEV(UserOutlined, {\n              className: \"site-form-item-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 40\n            }, this),\n            placeholder: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          shouldUpdate: true,\n          children: () => /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            htmlType: \"submit\",\n            disabled: !form.isFieldsTouched(true) || !!form.getFieldsError().filter(({\n              errors\n            }) => errors.length).length,\n            children: \"Log in\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MainRomChat, \"0+br2r7++loPsKiqw/L2REFB+j0=\", false, function () {\n  return [Form.useForm];\n});\n\n_c = MainRomChat;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainRomChat\");","map":{"version":3,"sources":["/home/atat-dev/Desktop/VS_CODE/NodeJS/FE/chat_socket_id/src/pages/MainRomChat.jsx"],"names":["React","useEffect","useState","Form","Input","Button","UserOutlined","HomeTwoTone","MainRomChat","form","useForm","forceUpdate","onFinish","values","console","log","required","message","isFieldsTouched","getFieldsError","filter","errors","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,QAAoC,MAApC;AACA,SAASC,YAAT,EAAuBC,WAAvB,QAA0C,mBAA1C;AACA,OAAO,yBAAP;;AACA,OAAO,MAAMC,WAAW,GAAG,MAAM;AAAA;;AAE7B,QAAM,CAACC,IAAD,IAASN,IAAI,CAACO,OAAL,EAAf;AACA,QAAM,GAAGC,WAAH,IAAkBT,QAAQ,CAAC,EAAD,CAAhC,CAH6B,CAK7B;;AACAD,EAAAA,SAAS,CAAC,MAAM;AACZU,IAAAA,WAAW,CAAC,EAAD,CAAX;AACH,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMC,QAAQ,GAAIC,MAAD,IAAY;AACzBC,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,MAAvB;AACH,GAFD;;AAIA,sBACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,8BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAEI,QAAC,IAAD;AAAM,QAAA,IAAI,EAAEJ,IAAZ;AAAkB,QAAA,IAAI,EAAC,kBAAvB;AAA0C,QAAA,MAAM,EAAC,QAAjD;AAA0D,QAAA,QAAQ,EAAEG,QAApE;AAAA,gCACI,QAAC,IAAD,CAAM,IAAN;AACI,UAAA,IAAI,EAAC,UADT;AAEI,UAAA,KAAK,EAAE,CAAC;AAAEI,YAAAA,QAAQ,EAAE,IAAZ;AAAkBC,YAAAA,OAAO,EAAE;AAA3B,WAAD,CAFX;AAAA,iCAII,QAAC,KAAD;AAAO,YAAA,MAAM,eAAE,QAAC,WAAD;AAAa,cAAA,SAAS,EAAC;AAAvB;AAAA;AAAA;AAAA;AAAA,oBAAf;AAAgE,YAAA,WAAW,EAAC;AAA5E;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAOI,QAAC,IAAD,CAAM,IAAN;AACI,UAAA,IAAI,EAAC,UADT;AAEI,UAAA,KAAK,EAAE,CAAC;AAAED,YAAAA,QAAQ,EAAE,IAAZ;AAAkBC,YAAAA,OAAO,EAAE;AAA3B,WAAD,CAFX;AAAA,iCAII,QAAC,KAAD;AAAO,YAAA,MAAM,eAAE,QAAC,YAAD;AAAc,cAAA,SAAS,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA,oBAAf;AAAiE,YAAA,WAAW,EAAC;AAA7E;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,gBAPJ,eAcI,QAAC,IAAD,CAAM,IAAN;AAAW,UAAA,YAAY,MAAvB;AAAA,oBACK,mBACG,QAAC,MAAD;AACI,YAAA,IAAI,EAAC,SADT;AAEI,YAAA,QAAQ,EAAC,QAFb;AAGI,YAAA,QAAQ,EACJ,CAACR,IAAI,CAACS,eAAL,CAAqB,IAArB,CAAD,IACA,CAAC,CAACT,IAAI,CAACU,cAAL,GAAsBC,MAAtB,CAA6B,CAAC;AAAEC,cAAAA;AAAF,aAAD,KAAgBA,MAAM,CAACC,MAApD,EAA4DA,MALtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFR;AAAA;AAAA;AAAA;AAAA,gBAdJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAoCH,CAlDM;;GAAMd,W;UAEML,IAAI,CAACO,O;;;KAFXF,W","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { Form, Input, Button } from 'antd';\nimport { UserOutlined, HomeTwoTone } from '@ant-design/icons';\nimport './scss/mainRoomChat.css'\nexport const MainRomChat = () => {\n\n    const [form] = Form.useForm();\n    const [, forceUpdate] = useState({});\n\n    // To disable submit button at the beginning.\n    useEffect(() => {\n        forceUpdate({});\n    }, []);\n\n    const onFinish = (values) => {\n        console.log('Finish:', values);\n    };\n\n    return (\n        <div className=\"mainRoom\">\n            <div className=\"roomChat\">\n            <h1>Room Chat Láº©u Xanh</h1>\n                <Form form={form} name=\"horizontal_login\" layout=\"inline\" onFinish={onFinish}>\n                    <Form.Item\n                        name=\"roomChat\"\n                        rules={[{ required: true, message: 'Please input your username!' }]}\n                    >\n                        <Input prefix={<HomeTwoTone className=\"site-form-item-icon\" />} placeholder=\"Room Chat\" />\n                    </Form.Item>\n                    <Form.Item\n                        name=\"userName\"\n                        rules={[{ required: true, message: 'Please input your username!' }]}\n                    >\n                        <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"Username\" />\n                    </Form.Item>\n\n                    <Form.Item shouldUpdate>\n                        {() => (\n                            <Button\n                                type=\"primary\"\n                                htmlType=\"submit\"\n                                disabled={\n                                    !form.isFieldsTouched(true) ||\n                                    !!form.getFieldsError().filter(({ errors }) => errors.length).length\n                                }\n                            >\n                                Log in\n                            </Button>\n                        )}\n                    </Form.Item>\n                </Form>\n            </div>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}